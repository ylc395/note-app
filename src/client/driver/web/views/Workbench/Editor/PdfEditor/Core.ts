import { GlobalWorkerOptions, type PDFDocumentLoadingTask, getDocument } from 'pdfjs-dist';
import { EventBus, ScrollMode, PDFViewer } from 'pdfjs-dist/web/pdf_viewer';
import PdfJsWorkerUrl from 'pdfjs-dist/build/pdf.worker.min.js?worker&url';
import 'pdfjs-dist/web/pdf_viewer.css';

// worker url generated by vite is not suitable for pdfjs since it's always "type=module" during dev
// while pdfjs doesn't load esmodule worker. see https://github.com/mozilla/pdf.js/blob/2c0478ecb2aa144230f8afbda5f411f82cb2b4fa/src/display/api.js#L2137
GlobalWorkerOptions.workerSrc = PdfJsWorkerUrl.replace('type=module', 'type=classic');

interface Options {
  container: HTMLDivElement;
  viewer: HTMLDivElement;
}

export default class Core {
  private readonly pdfViewer: PDFViewer;
  private loadingTask?: PDFDocumentLoadingTask;
  constructor(options: Options) {
    this.pdfViewer = Core.createPDFViewer(options);
  }

  private static createPDFViewer(options: Options) {
    const pdfViewer = new PDFViewer({ ...options, eventBus: new EventBus() });
    pdfViewer.currentScale = 0.8;
    pdfViewer.scrollMode = ScrollMode.PAGE;

    return pdfViewer;
  }

  async load(blob: ArrayBuffer) {
    if (this.loadingTask) {
      return;
    }

    this.loadingTask = getDocument({ data: blob });

    const doc = await this.loadingTask.promise;
    this.pdfViewer.setDocument(doc);
  }

  destroy() {
    this.pdfViewer.cleanup();
    this.loadingTask?.destroy();
  }
}
